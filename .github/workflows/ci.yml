name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  APP_NAME: trading-journal-api

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.build-version.outputs.APP_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "21.x"
      - run: |
          echo "APP_VERSION=$(grep -m1 version package.json | awk -F: '{ print $2 }' | sed 's/[", ]//g')" >> "$GITHUB_OUTPUT"
        id: build-version
      - run: |
          touch .env
          echo DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres >> .env
          cat .env
      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d
      - run: npm install
      - run: npm run test:all
      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Docker Build Version
        run: docker build -t allanweber/$APP_NAME:${{needs.build.outputs.app-version}} -f Dockerfile .
      - name: Build and Push Version
        run: docker push allanweber/$APP_NAME:${{needs.build.outputs.app-version}}

  docker-latest:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
      - name: Docker Build Latest
        run: docker build -t allanweber/$APP_NAME:latest -f Dockerfile .
      - name: Build and Push Latest
        run: docker push allanweber/$APP_NAME:latest
