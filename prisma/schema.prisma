// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Portfolio {
  id             String   @id @default(cuid())
  user           String   @db.VarChar(150)
  name           String   @db.VarChar(50)
  description    String?  @db.VarChar(255)
  startDate      DateTime
  startBalance   Float    @db.DoublePrecision
  currency       String   @db.VarChar(5)
  currentBalance Float    @db.DoublePrecision
  entries        Entry[]
}

enum Direction {
  LONG
  SHORT
}

enum OrderStatus {
  OPEN
  CLOSED
  CANCELED
}

enum EntryType {
  STOCK
  OPTION
  CRYPTO
  FUTURES
  FOREX
  INDEX
  WITHDRAWAL
  DEPOSIT
  TAXES
  DIVIDEND
  FEES
}

model Entry {
  id               String        @id @default(cuid())
  user             String        @db.VarChar(150)
  portfolio        Portfolio     @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  portfolioId      String
  date             DateTime
  price            Float         @db.DoublePrecision
  entryType        EntryType
  orderStatus      OrderStatus
  orderRef         String        @db.VarChar(50)
  notes            String?       @db.VarChar(255)
  symbol           String?       @db.VarChar(50)
  direction        Direction?
  size             Float?        @db.DoublePrecision
  profit           Float?        @db.DoublePrecision
  loss             Float?        @db.DoublePrecision
  costs            Float?        @db.DoublePrecision
  exitDate         DateTime?
  exitPrice        Float?        @db.DoublePrecision
  //Calculated fields
  result           Float?        @db.DoublePrecision
  grossResult      Float?        @db.DoublePrecision
  returnPercentage Float?        @db.DoublePrecision
  plannedRR        Float?        @db.DoublePrecision
  //Relations
  images           EntryImages[]
}

model EntryImages {
  imageId  String @db.VarChar(255)
  entry    Entry  @relation(fields: [entryId], references: [id], onDelete: Cascade)
  entryId  String
  url      String @db.Text
  fileName String @db.VarChar(255)

  @@unique([imageId])
}
